<% form_id = "fileupload_#{object.id}"
   form_id += sub_type.to_s unless sub_type.blank?
%>
<% index_url = url_for(:controller => "/datafiles", "datafile[owner_type]" => "#{object.class.name.to_s}", "datafile[owner_id]" => "#{object.id.to_s}", "datafile[sub_type]" => sub_type) %>
<%
   #if is_tree_node?(object)
   #  tree_node = object
   #  unless tree_node.blank?
   #    bread_crumb_load_tree_recursive(breadcrumb, tree_node)
   #  end
   #elsif object.respond_to?(:tree_nodes)
   #  if !object.tree_nodes.blank? && !object.tree_nodes.first.blank? && is_tree_node?(object.tree_nodes.first)
   #    tree_node = object.tree_nodes.first if !object.tree_nodes.blank? && !object.tree_nodes.first.blank?
   #  end
   #end
   tree_node = { :resource_type => "#{object.class.name.to_s}", :resource_id => "#{object.id.to_s}"}
   tree_node[:sub_type] = sub_type unless sub_type.blank?
%>
<% if !tree_node.blank? %>
    <script type="text/javascript">
        // loading tiny_mce connected to datafiles
        $(document).ready(function () {
            $('<%= tiny_mce_selector %>').LadasTinyMce(<%= tree_node.to_json.html_safe %>);
        });
    </script>
<% end %>


<script>
    var fileUploadErrors = {
        maxFileSize:'<%= t('itl-gem.multi_upload.maxFileSize') %>',
        minFileSize:'<%= t('itl-gem.multi_upload.minFileSize') %>',
        acceptFileTypes:'<%= t('itl-gem.multi_upload.acceptFileTypes') %>',
        maxNumberOfFiles:'<%= t('itl-gem.multi_upload.maxNumberOfFiles') %>',
        uploadedBytes:'<%= t('itl-gem.multi_upload.uploadedBytes') %>',
        emptyResult:'<%= t('itl-gem.multi_upload.emptyResult') %>'
    };
    //  var fileUploadErrors = {
    //      maxFileSize: 'File is too big',
    //      minFileSize: 'File is too small',
    //      acceptFileTypes: 'Filetype not allowed',
    //      maxNumberOfFiles: 'Max number of files exceeded',
    //      uploadedBytes: 'Uploaded bytes exceed file size',
    //      emptyResult: 'Empty file upload result'
    //    };
    window.locale = {
        "fileupload": {
            "errors": {
                "maxFileSize": '<%= t('itl-gem.multi_upload.errors.maxFileSize') %>',
                "minFileSize": '<%= t('itl-gem.multi_upload.errors.minFileSize') %>',
                "acceptFileTypes": '<%= t('itl-gem.multi_upload.errors.acceptFileTypes') %>',
                "maxNumberOfFiles": '<%= t('itl-gem.multi_upload.errors.maxNumberOfFiles') %>',
                "uploadedBytes": '<%= t('itl-gem.multi_upload.errors.uploadedBytes') %>',
                "emptyResult": '<%= t('itl-gem.multi_upload.errors.emptyResult') %>'
            },
            "error": '<%= t('itl-gem.multi_upload.error') %>',
            "start": '<%= t('itl-gem.multi_upload.start') %>',
            "cancel": '<%= t('itl-gem.multi_upload.cancel') %>',
            "destroy": '<%= t('itl-gem.multi_upload.destroy') %>'
        }
    };


</script>




<%= form_for Datafile.new, :html => {:multipart => true, :id => "#{form_id}"} do |f| %>
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <!--<div class="row fileupload-buttonbar btn-group" >-->
    <% if can_upload %>
        <div class="fileupload-buttonbar btn-group">
          <div class="span7">
            <!-- The fileinput-button span is used to style the file input field as button -->

                    <span class="btn btn-success fileinput-button">
                        <i class="icon-plus icon-white"></i>
                        <span><%= t('itl-gem.multi_upload.add_files') %></span>

                      <%= text_field_tag "datafile[owner_type]", "#{object.class.name.to_s}" %>
                      <%= text_field_tag "datafile[owner_id]", "#{object.id.to_s}" %>
                      <%= hidden_field_tag "datafile[sub_type]", sub_type unless sub_type.nil? %>
                      <%= f.file_field :file, :multiple => true %>
                      <%#= f.file_field :file%>
                    </span>
            <button type="submit" class="btn btn-primary start">
              <i class="icon-upload icon-white"></i>
              <span><%= t('itl-gem.multi_upload.start_upload') %></span>
            </button>
            <button type="reset" class="btn btn-warning cancel">
              <i class="icon-ban-circle icon-white"></i>
              <span><%= t('itl-gem.multi_upload.cancel_upload') %></span>
            </button>
            <!--<button type="button" class="btn btn-danger delete" onclick="if (!confirm('Chcete opravdu smazat označené soubory?')){event.stopPropagation();return false;}">-->
              <!--<i class="icon-trash icon-white"></i>-->
              <!--<span>Smazat</span>-->
            <!--</button>-->
            <!--<input type="checkbox" class="toggle" title="Označit vše">-->
          </div>
          <div class="span5">
            <!-- The global progress bar -->
            <div class="progress progress-success progress-striped active fade">
              <div class="bar" style="width:0%;"></div>
            </div>
          </div>
        </div>
    <% end %>
    <!-- The loading indicator is shown during image processing -->
    <div class="fileupload-loading"></div>
    <br>
    <!-- The table listing the files available for upload/download -->
    <table class="table table-striped">
      <thead>
      <th><%= t('itl-gem.multi_upload.preview') %></th>
      <th><%= t('itl-gem.multi_upload.file_name') %></th>
      <th><%= t('itl-gem.multi_upload.created_at') %></th>
      <th><%= t('itl-gem.multi_upload.size') %></th>
      <th></th>

      </thead>
      <tbody class="files" data-toggle="modal-gallery" data-target="#modal-gallery"></tbody>
    </table>
<% end %>


<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  <tr class="template-upload fade">
    <td class="preview"><span class="fade"></span></td>
    <td class="name"><span>{%=file.name%}</span></td>
    <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
    {% if (file.error) { %}
    <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span>
      {%=locale.fileupload.errors[file.error] || file.error%}
    </td>
    {% } else if (o.files.valid && !i) { %}
    <td>
      <div class="progress progress-success progress-striped active">
        <div class="bar" style="width:0%;"></div>
      </div>
    </td>
    <td class="start">{% if (!o.options.autoUpload) { %}
      <button class="btn btn-primary">
        <i class="icon-upload icon-white"></i>
        <span>{%=locale.fileupload.start%}</span>
      </button>
      {% } %}
    </td>
    {% } else { %}
    <td colspan="2"></td>
    {% } %}
    <td class="cancel">{% if (!i) { %}
      <button class="btn btn-warning">
        <i class="icon-ban-circle icon-white"></i>
        <span>{%=locale.fileupload.cancel%}</span>
      </button>
      {% } %}
    </td>
  </tr>
  {% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  <tr class="template-download fade">
    {% if (file.error) { %}
    <td></td>
    <td class="name"><span>{%=file.name%}</span></td>
    <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
    <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span>
      {%=locale.fileupload.errors[file.error] || file.error%}
    </td>
    {% } else { %}
    <td class="preview">{% if (file.thumbnail_url) { %}
      <a href="{%=file.url%}" title="{%=file.name%}" rel="gallery" ><img src="{%=file.thumbnail_url%}"></a>
      {% } %}
    </td>
    <td class="name">
      {% var sliced_name=file.name; %}
      {% if (sliced_name.length > 20) { %}
         {% sliced_name = sliced_name.slice(0,17) + '...'; %}
      {% } %}
      <a href="{%=file.url%}" title="{%=file.name%}" rel="{%=file.thumbnail_url&&'gallery'%}" >{%=sliced_name%}</a>
    </td>
    {% var sliced_user_name=file.user_name; %}
    {% if (sliced_user_name.length > 20) { %}
        {% sliced_user_name = sliced_user_name.slice(0,17) + '...'; %}
    {% } %}
    <td class="size"><span>{%=file.created_at%}, <a href="mailto:{%=file.user_email%}" title="{%=file.user_name%}">{%=sliced_user_name%}</a></span></td>
    <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
    <td colspan="2"></td>
    {% } %}
    {% if (file.delete_url) { %}
    <td class="delete">
      <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}" onclick="if (!confirm('<%= t('itl-gem.multi_upload.do_you_really_want_to_delete_this_file') %>')){event.stopPropagation();return false;}">
        <i class="icon-trash icon-white"></i>
        <span>{%=locale.fileupload.destroy%}</span>
      </button>
      <!--<input type="checkbox" name="delete" value="1">-->
    </td>
    {% } %}
  </tr>
  {% } %}
</script>



<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<%#= javascript_include_tag 'backbone_js/jquery.ui.widget.js' %>
<!-- The Templates and Load Image plugins are included for the FileUpload user interface -->
<!--<script src="http://blueimp.github.com/JavaScript-Templates/tmpl.min.js"></script>-->
<!--<script src="http://blueimp.github.com/JavaScript-Load-Image/load-image.min.js"></script>-->

<%#= javascript_include_tag 'backbone_js/tmpl.min.js' %>
<%#= javascript_include_tag 'backbone_js/load-image.min.js' %>

<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<%#= javascript_include_tag 'backbone_js/jquery.iframe-transport.js' %>
<%#= javascript_include_tag 'backbone_js/jquery.fileupload.js' %>
<%#= javascript_include_tag 'backbone_js/jquery.fileupload-ui.js' %>
<!-- add include_tag js files to config.assets.precompile in ...environments/production.rb if you have it in vendor/ assets -->

<script type="text/javascript" charset="utf-8">
    $(function () {
        // Initialize the jQuery File Upload widget:
        $('#<%= form_id %>').fileupload();
        // 
        // Load existing files:
        //$.getJSON($('#

        $.getJSON("<%= index_url %>", function (files) {
            var fu = $('#<%= form_id %>').data('fileupload'),
                    template;
            fu._adjustMaxNumberOfFiles(-files.length);
            template = fu._renderDownload(files)
                    .appendTo($('#<%= form_id %> .files'));
            // Force reflow:
            fu._reflow = fu._transition && template.length &&
                    template[0].offsetWidth;
            template.addClass('in');
            $('#loading').remove();
        });

    });
</script>